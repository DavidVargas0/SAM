<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net472</TargetFramework>
    <Rhino7DefaultInstallDir>$([MSBuild]::GetRegistryValueFromView('HKEY_LOCAL_MACHINE\SOFTWARE\McNeel\Rhinoceros\7.0\Install', 'Path', null, RegistryView.Registry64))</Rhino7DefaultInstallDir>
    <Rhino7DebugInstallDir>$([MSBuild]::GetRegistryValueFromView('HKEY_CURRENT_USER\Software\McNeel\Rhinoceros\7.0-WIP-Developer-Debug-trunk\Install', 'Path', null, RegistryView.Registry64))</Rhino7DebugInstallDir>
    <Rhino7InstallDir>$([MSBuild]::ValueOrDefault('$(Rhino7DebugInstallDir)', '$(Rhino7DefaultInstallDir)'))</Rhino7InstallDir>
    <Rhino7DefaultPluginsDir>$([MSBuild]::GetRegistryValueFromView('HKEY_LOCAL_MACHINE\SOFTWARE\McNeel\Rhinoceros\7.0\Install', 'Default Plug-ins Folder', null, RegistryView.Registry64))</Rhino7DefaultPluginsDir>
    <Rhino7DebugPluginsDir>$([MSBuild]::GetRegistryValueFromView('HKEY_CURRENT_USER\Software\McNeel\Rhinoceros\7.0-WIP-Developer-Debug-trunk\Install', 'Default Plug-ins Folder', null, RegistryView.Registry64))</Rhino7DebugPluginsDir>
    <Rhino7PluginsDir>$([MSBuild]::ValueOrDefault('$(Rhino7DebugPluginsDir)', '$(Rhino7DefaultPluginsDir)'))</Rhino7PluginsDir>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <UseWindowsForms>true</UseWindowsForms>
    <ImportWindowsDesktopTargets>true</ImportWindowsDesktopTargets>
    <StartProgram>C:\Program Files\Rhino 7\System\Rhino.exe</StartProgram>
    <Deterministic>false</Deterministic>
	  <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
	  <AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath>
  </PropertyGroup>
  <PropertyGroup>
    <OutputType>Library</OutputType>
    <IsWebBootstrapper>false</IsWebBootstrapper>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|AnyCPU'">
    <OutputPath>..\..\build\</OutputPath>
    <CodeAnalysisIgnoreBuiltInRules>false</CodeAnalysisIgnoreBuiltInRules>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <OutputPath>..\..\build\</OutputPath>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System.IO.Compression" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Grasshopper">
      <Version>6.32.20340.21001</Version>
      <ExcludeAssets>runtime</ExcludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.CSharp" Version="4.7.0" />
    <PackageReference Include="Newtonsoft.Json">
      <Version>13.0.3</Version>
    </PackageReference>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\SAM\SAM.Core\SAM.Core.csproj" />
  </ItemGroup>
  <PropertyGroup>
    <PostBuildEvent>
      copy "$(TargetPath)" "$(TargetDir)\$(ProjectName).gha"

      set SAM_DIR=$(APPDATA)\SAM\
      if not exist "%SAM_DIR%" mkdir "%SAM_DIR%"

      copy "$(TargetDir)*.dll" "%SAM_DIR%"
      copy "%SAM_DIR%"$(ProjectName).dll" "%SAM_DIR%\$(ProjectName).gha"


      echo #Order of files is important or just folder &gt; "$(APPDATA)\Grasshopper\Libraries\SAM.ghlink"
echo %SAM_DIR% &gt;&gt; "$(APPDATA)\Grasshopper\Libraries\SAM.ghlink"


xcopy "$(SolutionDir)\files\resources" "$(APPDATA)\SAM\resources" /Y/I/E/S
xcopy "$(SolutionDir)\files\resources" "$(USERPROFILE)\Documents\SAM\resources" /Y/D/I/E/S


if Exist "$(SolutionDir)\files\Grasshopper\UserObjects" (
xcopy "$(SolutionDir)\files\Grasshopper\UserObjects" "$(APPDATA)\Grasshopper\UserObjects\SAM" /Y/I/E/S
)
::erase "%SAM_DIR%$(ProjectName).dll"
::erase "$(TargetPath)"</PostBuildEvent>
  </PropertyGroup>
  <PropertyGroup>
    <FallbackCulture>en-US</FallbackCulture>
  </PropertyGroup>
</Project>